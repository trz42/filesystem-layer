# Prepare the input files for the Debian (deb) and Redhat (rpm) packages for CVMFS clients.
---
- name: Prepare Deb and RPM packages
  hosts: localhost
  vars:
    package_vendor: NESSI
    package_maintainer: NESSI <support@nessi.no>
    package_description: CVMFS configuration package for NESSI.
    package_source_dir: "{{ lookup('env', 'GITHUB_WORKSPACE') | default('/tmp', True) }}/package"
  tasks:
    - name: Check the number of defined domains (should be one!)
      fail:
        msg: "Cannot build a client package when eessi_cvmfs_server_urls contains different domains"
      when: eessi_cvmfs_server_urls | selectattr('domain') | list | unique | count > 1

    - name: Determine domain name
      set_fact:
        eessi_domain: "{{ eessi_cvmfs_server_urls[0].domain }}"

    - name: Create directory structure for the CVMFS config
      file:
        path: "{{ item }}"
        state: directory
        mode: 0775
      with_items:
        - "{{ package_source_dir }}"
        - "{{ package_source_dir }}/etc"
        - "{{ package_source_dir }}/etc/cvmfs"
        - "{{ package_source_dir }}/etc/cvmfs/keys"
        - "{{ package_source_dir }}/etc/cvmfs/keys/{{ eessi_domain }}"
        - "{{ package_source_dir }}/etc/cvmfs/domain.d"

    - name: Make NESSI CVMFS public key files
      copy:
        content: "{{ item.key }}"
        dest: "{{ package_source_dir }}{{ item.path }}"
        mode: 0644
      with_items: "{{ eessi_cvmfs_keys }}"

    - name: Make NESSI CVMFS domain configuration file
      copy:
        content: |
          # Stratum 1 servers for the nessi.no domain
          CVMFS_SERVER_URL="{{ item.urls|join(';') }}"

          # Public keys for the nessi.no domain
          CVMFS_KEYS_DIR="/etc/cvmfs/keys/{{ item.domain }}"

          # Enable or disable the Geo API, based on the configuration file
          CVMFS_USE_GEOAPI="{{ item.use_geoapi | ternary('yes', 'no') }}"

          # The client profile is supposed to be set in /etc/cvmfs/default.local
          if [ "$CVMFS_CLIENT_PROFILE" = "single" ]; then
            if [ "$CVMFS_HTTP_PROXY" = "" ]; then
              # For individual clients (laptops, clusters < 5 nodes), use a site proxy
              # where possible and otherwise a direct stratum 1 connection
              CVMFS_HTTP_PROXY="DIRECT"
            fi
          fi

        dest: "{{ package_source_dir }}/etc/cvmfs/domain.d/{{ item.domain }}.conf"
        mode: 0644
      with_items: "{{ eessi_cvmfs_server_urls }}"
